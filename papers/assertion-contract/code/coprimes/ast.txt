AST                  
└──Entrypoint: %coprimes
  └──Pattern: Pair
    └──Pattern: Id:a
      └──Type: Int_t
    └──Pattern: Id:b
      └──Type: Int_t
└──Assertion: Forall
  └──Pattern: Id:n
    └──Type: Int_t
  └──Assertion: If
    └──Expr: Bin Op: And
      └──Expr: Bin Op: Ge
        └──Expr: Int:2
        └──Expr: Id:n
      └──Expr: Bin Op: Le
        └──Expr: Id:n
        └──Expr: IfThenElse
          └──Expr: Bin Op: Ge
            └──Expr: Id:a
            └──Expr: Id:b
          └──Expr: Id:a
          └──Expr: Id:b
    └──Assertion: Assert
      └──Expr: Un Op: Not
        └──Expr: Bin Op: And
          └──Expr: Bin Op: Eq
            └──Expr: Bin Op: Mod
              └──Expr: Id:a
              └──Expr: Id:n
            └──Expr: Int:0
          └──Expr: Bin Op: Eq
            └──Expr: Bin Op: Mod
              └──Expr: Id:b
              └──Expr: Id:n
            └──Expr: Int:0
AST
└──Entrypoint: %coprimes
  └──Pattern: Pair
    └──Pattern: Id:a
      └──Type: Int_t
    └──Pattern: Id:b
      └──Type: Int_t
└──Assertion: Exists
  └──Pattern: Id:n
    └──Type: Int_t
  └──Bounds: 
    └──Expr: Bin Op: Ge
      └──Expr: Int:2
      └──Expr: Id:n
    └──Expr: Bin Op: Le
      └──Expr: Id:n
      └──Expr: IfThenElse
        └──Expr: Bin Op: Ge
          └──Expr: Id:a
          └──Expr: Id:b
        └──Expr: Id:a
        └──Expr: Id:b
  └──Assertion: Assert
    └──Expr: Bin Op: And
      └──Expr: Bin Op: Eq
        └──Expr: Bin Op: Mod
          └──Expr: Id:a
          └──Expr: Id:n
        └──Expr: Int:0
      └──Expr: Bin Op: Eq
        └──Expr: Bin Op: Mod
          └──Expr: Id:b
          └──Expr: Id:n
        └──Expr: Int:0

{"entrypoint":[["Some","coprimes"],["Pair",[["Ident",["a","Int_t"]],["Ident",["b","Int_t"]]]]],"body":["Forall",[["n","Int_t"],["If",[["Binop",["And",["Binop",["Ge",["Int",2],["Ident","n"]]],["Binop",["Le",["Ident","n"],["IfThenElse",[["Binop",["Ge",["Ident","a"],["Ident","b"]]],["Ident","a"],["Ident","b"]]]]]]],["Assert",["Unop",["Not",["Binop",["And",["Binop",["Eq",["Binop",["Mod",["Ident","a"],["Ident","n"]]],["Int",0]]],["Binop",["Eq",["Binop",["Mod",["Ident","b"],["Ident","n"]]],["Int",0]]]]]]]]]]]]}

